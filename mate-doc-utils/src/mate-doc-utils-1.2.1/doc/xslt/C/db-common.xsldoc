<section id="db-common"><metas><meta><name>calls-names</name><desc>l10n.gettext</desc><desc>db.linenumbering</desc><desc>db.linenumbering.start</desc><desc>db.orderedlist.start</desc><desc>db.personname</desc></meta><meta><name>calls-modes</name></meta><meta><name>uses-modes</name></meta><meta><name>uses-params</name></meta><meta><name>Requires</name><desc>gettext</desc></meta></metas>
  <name>DocBook Common</name>
  
  <body>
  <para>This stylesheet module provides utility templates for DocBook that are
  independant of the target format.</para>
  </body>
<template>
  <name>db.copyright</name>
  <desc>Outputs copyright information</desc>

  <params>
    <param><name>node</name>
      <desc>The <literal>copyright</literal> element to format</desc>
    </param>
  </params>

  <body>
  <para>This template outputs copyright information from a <literal>copyright</literal> elements.
  It assembles the <literal>year</literal> and <literal>holder</literal> elements into a simple copyright
  notice, beginning with the copyright symbol "Â©".</para>
  </body>
</template>

<template>
  <name>db.linenumbering</name>
  <desc>Numbers each line in a verbatim environment</desc>

  <params>
    <param><name>node</name>
      <desc>The verbatim element to create the line numbering for</desc>
    </param>
    <param><name>number</name>
      <desc>The starting line number</desc>
    </param>
  </params>

  <body>
  <para>This template outputs a string with line numbers for each line in a verbatim
  elements.  Each line number is on its own line, allowing the output string to
  be placed to the side of the verbatim output.</para>
  </body>
</template>

<template>
  <name>db.linenumbering.start</name>
  <desc>Determines the starting line number for a verbatim element</desc>

  <params>
    <param><name>node</name>
      <desc>The verbatim element to determine the starting line number for</desc>
    </param>
  </params>

  <body>
  <para>This template determines the starting line number for a verbatim element using
  the <literal>continuation</literal> attribute.  The template finds the first preceding element
  of the same name, counts its lines, and handles any <literal>startinglinenumber</literal> or
  <literal>continuation</literal> element it finds on that element.</para>
  </body>
</template>

<template>
  <name>db.orderedlist.start</name>
  <desc>Determines the number to use for the first <literal>listitem</literal> in an <literal>orderedlist</literal></desc>

  <params>
    <param><name>node</name>
      <desc>The <literal>orderedlist</literal> element to use</desc>
    </param>
  </params>

  <body>
  <para>This template determines the starting number for an <literal>orderedlist</literal> element using
  the <literal>continuation</literal> attribute.  Thi template finds the first preceding <literal>orderedlist</literal>
  element and counts its list items.  If that element also uses the <literal>continuation</literal>,
  this template calls itself recursively to add that element's starting line number
  to its list item count.</para>
  </body>
</template>

<template>
  <name>db.personname</name>
  <desc>Outputs the name of a person</desc>

  <params>
    <param><name>node</name>
      <desc>The element containing tags such as <literal>firstname</literal> and <literal>surname</literal></desc>
    </param>
    <param><name>lang</name>
      <desc>The language rules to use to construct the name</desc>
    </param>
  </params>

  <body>
  <para>This template outputs the name of a person as modelled by the <literal>personname</literal>
  element.  The <literal>personname</literal> element allows authors to mark up components of
  a person's name, such as the person's first name and surname.  This template
  assembles those into a string.</para>
  </body>
</template>

<template>
  <name>db.personname.list</name>
  <desc>Outputs a list of people's names</desc>

  <params>
    <param><name>nodes</name>
      <desc>The elements containing tags such as <literal>firstname</literal> and <literal>surname</literal></desc>
    </param>
    <param><name>lang</name>
      <desc>The language rules to use to construct the list of names</desc>
    </param>
  </params>

  <body>
  <para>This template outputs a list of names of people as modelled by the <literal>personname</literal>
  element.  The <literal>personname</literal> element allows authors to mark up components of a
  person's name, such as the person's first name and surname.  This template makes
  a list formatted according to the locale set in <parameter>lang</parameter> and calls the template
  <function><link linkend="T__db_personname">db.personname</link></function> for each element in <parameter>nodes</parameter>.</para>
  </body>
</template>

</section>
